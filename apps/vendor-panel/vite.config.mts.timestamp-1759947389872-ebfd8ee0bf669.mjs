// vite.config.mts
import inject from "file:///home/d33pfates/Desktop/projects/gowda-project/mercur/node_modules/@medusajs/admin-vite-plugin/dist/index.mjs";
import react from "file:///home/d33pfates/Desktop/projects/gowda-project/mercur/apps/vendor-panel/node_modules/@vitejs/plugin-react/dist/index.mjs";
import { defineConfig, loadEnv } from "file:///home/d33pfates/Desktop/projects/gowda-project/mercur/node_modules/vite/dist/node/index.js";
import inspect from "file:///home/d33pfates/Desktop/projects/gowda-project/mercur/node_modules/vite-plugin-inspect/dist/index.mjs";
import path from "path";
var __vite_injected_original_dirname = "/home/d33pfates/Desktop/projects/gowda-project/mercur/apps/vendor-panel";
var vite_config_default = defineConfig(({ mode }) => {
  const env = loadEnv(mode, process.cwd());
  const BASE = env.VITE_MEDUSA_BASE || "/";
  const BACKEND_URL = env.VITE_MEDUSA_BACKEND_URL || "http://localhost:9000";
  const STOREFRONT_URL = env.VITE_MEDUSA_STOREFRONT_URL || "http://localhost:8000";
  const PUBLISHABLE_API_KEY = env.VITE_PUBLISHABLE_API_KEY || "";
  const TALK_JS_APP_ID = env.VITE_TALK_JS_APP_ID || "";
  const DISABLE_SELLERS_REGISTRATION = env.VITE_DISABLE_SELLERS_REGISTRATION || "false";
  const MEDUSA_PROJECT = env.VITE_MEDUSA_PROJECT || null;
  const sources = MEDUSA_PROJECT ? [MEDUSA_PROJECT] : [];
  return {
    plugins: [
      inspect(),
      react(),
      inject({
        sources
      })
    ],
    resolve: {
      alias: {
        "@": path.resolve(__vite_injected_original_dirname, "./src")
      }
    },
    define: {
      __BASE__: JSON.stringify(BASE),
      __BACKEND_URL__: JSON.stringify(BACKEND_URL),
      __STOREFRONT_URL__: JSON.stringify(STOREFRONT_URL),
      __PUBLISHABLE_API_KEY__: JSON.stringify(PUBLISHABLE_API_KEY),
      __TALK_JS_APP_ID__: JSON.stringify(TALK_JS_APP_ID),
      __DISABLE_SELLERS_REGISTRATION__: JSON.stringify(
        DISABLE_SELLERS_REGISTRATION
      )
    },
    server: {
      open: true
    },
    optimizeDeps: {
      entries: [],
      include: ["recharts"]
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcubXRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL2hvbWUvZDMzcGZhdGVzL0Rlc2t0b3AvcHJvamVjdHMvZ293ZGEtcHJvamVjdC9tZXJjdXIvYXBwcy92ZW5kb3ItcGFuZWxcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9ob21lL2QzM3BmYXRlcy9EZXNrdG9wL3Byb2plY3RzL2dvd2RhLXByb2plY3QvbWVyY3VyL2FwcHMvdmVuZG9yLXBhbmVsL3ZpdGUuY29uZmlnLm10c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vaG9tZS9kMzNwZmF0ZXMvRGVza3RvcC9wcm9qZWN0cy9nb3dkYS1wcm9qZWN0L21lcmN1ci9hcHBzL3ZlbmRvci1wYW5lbC92aXRlLmNvbmZpZy5tdHNcIjtpbXBvcnQgaW5qZWN0IGZyb20gXCJAbWVkdXNhanMvYWRtaW4tdml0ZS1wbHVnaW5cIlxuaW1wb3J0IHJlYWN0IGZyb20gXCJAdml0ZWpzL3BsdWdpbi1yZWFjdFwiXG5pbXBvcnQgeyBkZWZpbmVDb25maWcsIGxvYWRFbnYgfSBmcm9tIFwidml0ZVwiXG5pbXBvcnQgaW5zcGVjdCBmcm9tIFwidml0ZS1wbHVnaW4taW5zcGVjdFwiXG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiXG5cbi8vIGh0dHBzOi8vdml0ZWpzLmRldi9jb25maWcvXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoKHsgbW9kZSB9KSA9PiB7XG4gIGNvbnN0IGVudiA9IGxvYWRFbnYobW9kZSwgcHJvY2Vzcy5jd2QoKSlcblxuICBjb25zdCBCQVNFID0gZW52LlZJVEVfTUVEVVNBX0JBU0UgfHwgXCIvXCJcbiAgY29uc3QgQkFDS0VORF9VUkwgPSBlbnYuVklURV9NRURVU0FfQkFDS0VORF9VUkwgfHwgXCJodHRwOi8vbG9jYWxob3N0OjkwMDBcIlxuICBjb25zdCBTVE9SRUZST05UX1VSTCA9XG4gICAgZW52LlZJVEVfTUVEVVNBX1NUT1JFRlJPTlRfVVJMIHx8IFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwXCJcbiAgY29uc3QgUFVCTElTSEFCTEVfQVBJX0tFWSA9IGVudi5WSVRFX1BVQkxJU0hBQkxFX0FQSV9LRVkgfHwgXCJcIlxuICBjb25zdCBUQUxLX0pTX0FQUF9JRCA9IGVudi5WSVRFX1RBTEtfSlNfQVBQX0lEIHx8IFwiXCJcbiAgY29uc3QgRElTQUJMRV9TRUxMRVJTX1JFR0lTVFJBVElPTiA9XG4gICAgZW52LlZJVEVfRElTQUJMRV9TRUxMRVJTX1JFR0lTVFJBVElPTiB8fCBcImZhbHNlXCJcblxuICAvKipcbiAgICogQWRkIHRoaXMgdG8geW91ciAuZW52IGZpbGUgdG8gc3BlY2lmeSB0aGUgcHJvamVjdCB0byBsb2FkIGFkbWluIGV4dGVuc2lvbnMgZnJvbS5cbiAgICovXG4gIGNvbnN0IE1FRFVTQV9QUk9KRUNUID0gZW52LlZJVEVfTUVEVVNBX1BST0pFQ1QgfHwgbnVsbFxuICBjb25zdCBzb3VyY2VzID0gTUVEVVNBX1BST0pFQ1QgPyBbTUVEVVNBX1BST0pFQ1RdIDogW11cblxuICByZXR1cm4ge1xuICAgIHBsdWdpbnM6IFtcbiAgICAgIGluc3BlY3QoKSxcbiAgICAgIHJlYWN0KCksXG4gICAgICBpbmplY3Qoe1xuICAgICAgICBzb3VyY2VzLFxuICAgICAgfSksXG4gICAgXSxcbiAgICByZXNvbHZlOiB7XG4gICAgICBhbGlhczoge1xuICAgICAgICBcIkBcIjogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCIuL3NyY1wiKSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBkZWZpbmU6IHtcbiAgICAgIF9fQkFTRV9fOiBKU09OLnN0cmluZ2lmeShCQVNFKSxcbiAgICAgIF9fQkFDS0VORF9VUkxfXzogSlNPTi5zdHJpbmdpZnkoQkFDS0VORF9VUkwpLFxuICAgICAgX19TVE9SRUZST05UX1VSTF9fOiBKU09OLnN0cmluZ2lmeShTVE9SRUZST05UX1VSTCksXG4gICAgICBfX1BVQkxJU0hBQkxFX0FQSV9LRVlfXzogSlNPTi5zdHJpbmdpZnkoUFVCTElTSEFCTEVfQVBJX0tFWSksXG4gICAgICBfX1RBTEtfSlNfQVBQX0lEX186IEpTT04uc3RyaW5naWZ5KFRBTEtfSlNfQVBQX0lEKSxcbiAgICAgIF9fRElTQUJMRV9TRUxMRVJTX1JFR0lTVFJBVElPTl9fOiBKU09OLnN0cmluZ2lmeShcbiAgICAgICAgRElTQUJMRV9TRUxMRVJTX1JFR0lTVFJBVElPTlxuICAgICAgKSxcbiAgICB9LFxuICAgIHNlcnZlcjoge1xuICAgICAgb3BlbjogdHJ1ZSxcbiAgICB9LFxuICAgIG9wdGltaXplRGVwczoge1xuICAgICAgZW50cmllczogW10sXG4gICAgICBpbmNsdWRlOiBbXCJyZWNoYXJ0c1wiXSxcbiAgICB9LFxuICB9XG59KVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUF5WSxPQUFPLFlBQVk7QUFDNVosT0FBTyxXQUFXO0FBQ2xCLFNBQVMsY0FBYyxlQUFlO0FBQ3RDLE9BQU8sYUFBYTtBQUNwQixPQUFPLFVBQVU7QUFKakIsSUFBTSxtQ0FBbUM7QUFPekMsSUFBTyxzQkFBUSxhQUFhLENBQUMsRUFBRSxLQUFLLE1BQU07QUFDeEMsUUFBTSxNQUFNLFFBQVEsTUFBTSxRQUFRLElBQUksQ0FBQztBQUV2QyxRQUFNLE9BQU8sSUFBSSxvQkFBb0I7QUFDckMsUUFBTSxjQUFjLElBQUksMkJBQTJCO0FBQ25ELFFBQU0saUJBQ0osSUFBSSw4QkFBOEI7QUFDcEMsUUFBTSxzQkFBc0IsSUFBSSw0QkFBNEI7QUFDNUQsUUFBTSxpQkFBaUIsSUFBSSx1QkFBdUI7QUFDbEQsUUFBTSwrQkFDSixJQUFJLHFDQUFxQztBQUszQyxRQUFNLGlCQUFpQixJQUFJLHVCQUF1QjtBQUNsRCxRQUFNLFVBQVUsaUJBQWlCLENBQUMsY0FBYyxJQUFJLENBQUM7QUFFckQsU0FBTztBQUFBLElBQ0wsU0FBUztBQUFBLE1BQ1AsUUFBUTtBQUFBLE1BQ1IsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLFFBQ0w7QUFBQSxNQUNGLENBQUM7QUFBQSxJQUNIO0FBQUEsSUFDQSxTQUFTO0FBQUEsTUFDUCxPQUFPO0FBQUEsUUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsTUFDdEM7QUFBQSxJQUNGO0FBQUEsSUFDQSxRQUFRO0FBQUEsTUFDTixVQUFVLEtBQUssVUFBVSxJQUFJO0FBQUEsTUFDN0IsaUJBQWlCLEtBQUssVUFBVSxXQUFXO0FBQUEsTUFDM0Msb0JBQW9CLEtBQUssVUFBVSxjQUFjO0FBQUEsTUFDakQseUJBQXlCLEtBQUssVUFBVSxtQkFBbUI7QUFBQSxNQUMzRCxvQkFBb0IsS0FBSyxVQUFVLGNBQWM7QUFBQSxNQUNqRCxrQ0FBa0MsS0FBSztBQUFBLFFBQ3JDO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxJQUNBLFFBQVE7QUFBQSxNQUNOLE1BQU07QUFBQSxJQUNSO0FBQUEsSUFDQSxjQUFjO0FBQUEsTUFDWixTQUFTLENBQUM7QUFBQSxNQUNWLFNBQVMsQ0FBQyxVQUFVO0FBQUEsSUFDdEI7QUFBQSxFQUNGO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
